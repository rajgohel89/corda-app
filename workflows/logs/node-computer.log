[INFO ] 2020-04-07T21:35:56,189Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200407-213552.989/custom-cordapp_1_5_46e3fb1c-4205-41a7-97fb-20f023d0796e.jar, rootPackageName=null) {}
[INFO ] 2020-04-07T21:35:56,519Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200407-213552.989/custom-cordapp_1_5_46e3fb1c-4205-41a7-97fb-20f023d0796e.jar {}
[INFO ] 2020-04-07T21:36:08,834Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\workflows ... {}
[INFO ] 2020-04-07T21:36:09,483Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-07T21:36:12,732Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-07T21:36:15,660Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-07T21:36:15,707Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-07T21:36:15,709Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-07T21:36:17,139Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-07T21:36:17,190Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-07T21:36:18,087Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-07T21:36:18,087Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-07T21:36:18,088Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-07T21:36:18,457Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-07T21:36:18,488Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-07T21:36:19,747Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-07T21:36:20,617Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-07T21:36:20,637Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-07T21:36:20,678Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-07T21:36:20,689Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-07T21:36:20,689Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-07T21:36:22,237Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-07T21:36:22,237Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-07T21:36:22,455Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-07T21:36:22,455Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-07T21:36:22,562Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-07T21:36:22,562Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-07T21:36:22,794Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-07T21:36:22,795Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-07T21:36:24,022Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:24,139Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-07T21:36:24,344Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-07T21:36:24,826Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-07T21:36:24,826Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-07T21:36:24,882Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-07T21:36:24,932Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-07T21:36:24,933Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-07T21:36:25,002Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,013Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-07T21:36:25,034Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,034Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-07T21:36:25,035Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,035Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,077Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-07T21:36:25,146Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,146Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-07T21:36:25,188Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,189Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-07T21:36:25,189Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,189Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-07T21:36:25,189Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,189Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-07T21:36:25,190Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,257Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,257Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-07T21:36:25,331Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,332Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-07T21:36:25,375Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-07T21:36:25,423Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-07T21:36:25,423Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-07T21:36:25,424Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-07T21:36:25,425Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-07T21:36:25,425Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-07T21:36:25,436Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,446Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-07T21:36:25,446Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,447Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-07T21:36:25,458Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,459Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,460Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-07T21:36:25,539Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,539Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-07T21:36:25,582Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,583Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-07T21:36:25,583Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,585Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-07T21:36:25,585Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,585Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-07T21:36:25,587Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-07T21:36:25,587Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,588Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-07T21:36:25,735Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-07T21:36:25,747Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-07T21:36:25,828Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-07T21:36:25,828Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-07T21:36:25,832Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-07T21:36:25,883Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\.gradle {}
[INFO ] 2020-04-07T21:36:25,883Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-07T21:36:25,936Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-07T21:36:26,376Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200407-213602.394\nodes\0\cordapps] {}
[INFO ] 2020-04-07T21:36:26,381Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-07T21:36:26,390Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-07T21:36:26,489Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-07T21:36:30,036Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-07T21:36:30,238Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-07T21:36:30,239Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-07T21:36:30,240Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-07T21:36:30,241Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-07T21:36:30,687Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-07T21:36:02.348Z
      epoch=1
  } {}
[INFO ] 2020-04-07T21:36:39,482Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:39,487Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200407-213602.394\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:39,487Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:39,578Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:39,815Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:39,827Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:43,634Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:44,927Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:44,935Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:44,941Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:44,941Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:45,117Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:45,242Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-07T21:36:45,305Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-07T21:36:45,305Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-07T21:36:45,837Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-07T21:36:45,856Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-07T21:36:45,856Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586295405856) {}
[INFO ] 2020-04-07T21:36:45,866Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-07T21:36:46,187Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586295405856) {}
[INFO ] 2020-04-07T21:36:46,321Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-07T21:36:46,395Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586295405856) {}
[INFO ] 2020-04-07T21:36:46,481Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-07T21:36:46,589Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=79C82F22FDAB4D610C7702C4A920C9FBDB78285491269D964ABE1BE94CC94B4B uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-07T21:36:46,601Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-07T21:36:46,608Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-07T21:36:48,242Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586295405856) {}
[INFO ] 2020-04-07T21:36:48,279Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586295405856) {}
[INFO ] 2020-04-07T21:36:48,283Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-07T21:36:48,303Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586295405856) {}
[INFO ] 2020-04-07T21:36:48,303Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-07T21:36:48,338Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200407-213602.394\nodes\1\cordapps] {}
[INFO ] 2020-04-07T21:36:48,342Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-07T21:36:48,344Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-07T21:36:48,375Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/1/cordapps/workflows-0.1.jar {}
[WARN ] 2020-04-07T21:36:48,388Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-04-07T21:36:48,389Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template Flows, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[INFO ] 2020-04-07T21:36:48,437Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-07T21:36:48,526Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-07T21:36:48,528Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-07T21:36:48,529Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-07T21:36:48,530Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-07T21:36:48,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-07T21:36:02.348Z
      epoch=1
  } {}
[INFO ] 2020-04-07T21:36:49,798Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:49,801Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200407-213602.394\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:49,801Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:49,851Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:49,855Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:49,855Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:50,284Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:50,305Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:50,307Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:50,311Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:50,312Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:50,439Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:50,450Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-07T21:36:50,454Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-07T21:36:50,454Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-07T21:36:50,688Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-07T21:36:50,692Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-07T21:36:50,753Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-07T21:36:50,753Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586295410753) {}
[INFO ] 2020-04-07T21:36:50,757Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-07T21:36:50,770Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586295410753) {}
[INFO ] 2020-04-07T21:36:50,786Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-07T21:36:50,794Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586295410753) {}
[INFO ] 2020-04-07T21:36:50,801Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-07T21:36:50,911Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=79C82F22FDAB4D610C7702C4A920C9FBDB78285491269D964ABE1BE94CC94B4B uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-07T21:36:50,927Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586295410753) {}
[INFO ] 2020-04-07T21:36:50,938Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586295405856) {}
[INFO ] 2020-04-07T21:36:50,942Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-07T21:36:50,965Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586295410753) {}
[INFO ] 2020-04-07T21:36:50,967Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-07T21:36:50,986Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586295410753) {}
[INFO ] 2020-04-07T21:36:50,986Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-07T21:36:50,987Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586295410753) {}
[INFO ] 2020-04-07T21:36:50,987Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-07T21:36:51,017Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200407-213602.394\nodes\2\cordapps] {}
[INFO ] 2020-04-07T21:36:51,021Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-07T21:36:51,023Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-07T21:36:51,046Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200407-213602.394/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-07T21:36:51,099Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-07T21:36:51,155Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-07T21:36:51,156Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-07T21:36:51,156Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-07T21:36:51,156Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-07T21:36:51,164Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-07T21:36:02.348Z
      epoch=1
  } {}
[INFO ] 2020-04-07T21:36:52,468Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,471Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200407-213602.394\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,471Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,503Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,512Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,512Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,788Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,802Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,804Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,818Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,818Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,982Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-07T21:36:52,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-07T21:36:52,997Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-07T21:36:52,997Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-07T21:36:53,287Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-07T21:36:53,293Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-07T21:36:54,134Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-07T21:36:54,134Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586295414134) {}
[INFO ] 2020-04-07T21:36:54,134Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-07T21:36:54,150Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586295414134) {}
[INFO ] 2020-04-07T21:36:54,165Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-07T21:36:54,181Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586295414134) {}
[INFO ] 2020-04-07T21:36:54,196Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-07T21:36:54,259Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=79C82F22FDAB4D610C7702C4A920C9FBDB78285491269D964ABE1BE94CC94B4B uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-07T21:36:54,290Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586295414134) {}
[INFO ] 2020-04-07T21:36:54,290Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586295405856) {}
[INFO ] 2020-04-07T21:36:54,290Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-07T21:36:54,306Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586295414134) {}
[INFO ] 2020-04-07T21:36:54,306Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-07T21:36:54,337Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586295410753) {}
[INFO ] 2020-04-07T21:36:54,337Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-07T21:36:54,353Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586295414134) {}
[INFO ] 2020-04-07T21:36:54,353Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-07T21:36:54,368Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586295414134) {}
[INFO ] 2020-04-07T21:36:54,368Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-07T21:36:54,368Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586295414134) {}
[INFO ] 2020-04-07T21:36:54,368Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-07T21:36:54,384Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-07T21:36:54,384Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-07T21:36:54,384Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-07T21:36:54,384Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:31:01,033Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-053057.290/custom-cordapp_1_5_d71f0254-8539-4937-91a1-604af1b05549.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:31:02,518Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-053057.290/custom-cordapp_1_5_d71f0254-8539-4937-91a1-604af1b05549.jar {}
[INFO ] 2020-04-08T05:31:20,833Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\workflows ... {}
[INFO ] 2020-04-08T05:31:21,989Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:31:29,859Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T05:31:32,303Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-08T05:31:32,335Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T05:31:32,338Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:31:33,620Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:31:33,765Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-08T05:31:34,780Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:31:34,790Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:31:34,811Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-08T05:31:35,393Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:31:35,424Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:31:36,876Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-08T05:31:37,965Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:31:37,975Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T05:31:38,022Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:31:38,023Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T05:31:38,025Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:31:39,890Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:31:39,891Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-08T05:31:40,112Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:31:40,113Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-08T05:31:40,186Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:31:40,187Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-08T05:31:40,381Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:31:40,381Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:31:40,709Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:40,780Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:31:40,956Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-08T05:31:41,353Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:31:41,353Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-08T05:31:41,431Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:31:41,492Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-08T05:31:41,492Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:31:41,621Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:41,631Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-08T05:31:41,631Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:41,641Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-08T05:31:41,641Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:41,642Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:41,747Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-08T05:31:41,831Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:41,831Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:31:41,851Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:41,887Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:31:41,888Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:41,888Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:31:41,889Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:41,889Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:31:41,889Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:42,007Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:42,008Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-08T05:31:42,073Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:42,122Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:31:42,186Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-08T05:31:42,319Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:31:42,319Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-08T05:31:42,319Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:31:42,443Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-08T05:31:42,443Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:31:42,477Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:42,478Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-08T05:31:42,518Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:42,519Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-08T05:31:42,522Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:42,522Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:42,523Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-08T05:31:42,749Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:42,750Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:31:42,760Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:42,760Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:31:42,770Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:42,771Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:31:42,771Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:42,771Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:31:42,772Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:31:42,772Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:42,772Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-08T05:31:45,846Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:31:45,857Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:31:45,879Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-08T05:31:45,879Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:31:45,883Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:31:45,934Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\.gradle {}
[INFO ] 2020-04-08T05:31:45,934Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:31:45,985Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-08T05:31:46,331Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-053112.715\nodes\0\cordapps] {}
[INFO ] 2020-04-08T05:31:46,333Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:31:46,340Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T05:31:46,413Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T05:31:48,537Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T05:31:48,689Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T05:31:48,690Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:31:48,691Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:31:48,691Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:31:49,886Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T05:31:12.684Z
      epoch=1
  } {}
[INFO ] 2020-04-08T05:31:58,824Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:31:58,834Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-053112.715\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:31:58,834Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:31:58,987Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:31:59,267Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:31:59,283Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:03,456Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:04,588Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:04,601Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:04,609Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:04,609Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:04,786Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:04,920Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T05:32:05,011Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T05:32:05,011Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T05:32:05,586Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T05:32:05,604Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T05:32:05,604Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586323925604) {}
[INFO ] 2020-04-08T05:32:05,612Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T05:32:05,966Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586323925604) {}
[INFO ] 2020-04-08T05:32:06,102Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T05:32:06,146Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586323925604) {}
[INFO ] 2020-04-08T05:32:06,217Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:32:06,473Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=57B1AC1622BF31E30550C515D1D24BF3A2EEF228C9B86A0EEE6966EC3395F4EF uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T05:32:06,496Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-08T05:32:06,501Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-08T05:32:07,402Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586323925604) {}
[INFO ] 2020-04-08T05:32:07,465Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586323925604) {}
[INFO ] 2020-04-08T05:32:07,468Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:32:07,469Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586323925604) {}
[INFO ] 2020-04-08T05:32:07,469Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:32:07,516Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-053112.715\nodes\1\cordapps] {}
[INFO ] 2020-04-08T05:32:07,518Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:32:07,519Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T05:32:07,568Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/1/cordapps/workflows-0.1.jar {}
[WARN ] 2020-04-08T05:32:07,581Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-04-08T05:32:07,584Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template Flows, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[INFO ] 2020-04-08T05:32:07,628Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T05:32:07,687Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T05:32:07,688Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:32:07,688Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:32:07,689Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:32:07,699Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T05:31:12.684Z
      epoch=1
  } {}
[INFO ] 2020-04-08T05:32:09,340Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,343Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-053112.715\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,343Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,395Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,402Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,402Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,836Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,872Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,881Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,886Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:09,887Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:10,011Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:10,026Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T05:32:10,030Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:32:10,030Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:32:10,440Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:32:10,443Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T05:32:10,488Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T05:32:10,488Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586323930488) {}
[INFO ] 2020-04-08T05:32:10,496Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T05:32:10,512Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586323930488) {}
[INFO ] 2020-04-08T05:32:10,531Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T05:32:10,542Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586323930488) {}
[INFO ] 2020-04-08T05:32:10,554Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:32:10,668Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=57B1AC1622BF31E30550C515D1D24BF3A2EEF228C9B86A0EEE6966EC3395F4EF uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T05:32:10,693Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586323930488) {}
[INFO ] 2020-04-08T05:32:10,700Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586323925604) {}
[INFO ] 2020-04-08T05:32:10,703Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T05:32:10,732Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586323930488) {}
[INFO ] 2020-04-08T05:32:10,735Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T05:32:10,754Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586323930488) {}
[INFO ] 2020-04-08T05:32:10,754Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:32:10,756Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586323930488) {}
[INFO ] 2020-04-08T05:32:10,757Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:32:10,793Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-053112.715\nodes\2\cordapps] {}
[INFO ] 2020-04-08T05:32:10,794Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:32:10,796Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T05:32:10,824Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053112.715/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T05:32:10,887Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T05:32:10,947Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T05:32:10,947Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:32:10,947Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:32:10,947Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:32:10,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T05:31:12.684Z
      epoch=1
  } {}
[INFO ] 2020-04-08T05:32:12,468Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:12,470Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-053112.715\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:12,470Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:12,513Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:12,518Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:12,518Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:13,447Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:13,479Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:13,482Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:13,501Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:13,501Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:13,746Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:32:13,775Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T05:32:13,779Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:32:13,779Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:32:14,264Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:32:14,267Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T05:32:14,342Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T05:32:14,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586323934344) {}
[INFO ] 2020-04-08T05:32:14,349Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T05:32:14,384Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586323934344) {}
[INFO ] 2020-04-08T05:32:14,423Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T05:32:14,512Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586323934344) {}
[INFO ] 2020-04-08T05:32:14,533Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:32:14,629Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=57B1AC1622BF31E30550C515D1D24BF3A2EEF228C9B86A0EEE6966EC3395F4EF uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T05:32:14,654Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586323934344) {}
[INFO ] 2020-04-08T05:32:14,660Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586323925604) {}
[INFO ] 2020-04-08T05:32:14,663Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T05:32:14,690Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586323934344) {}
[INFO ] 2020-04-08T05:32:14,693Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T05:32:14,729Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586323930488) {}
[INFO ] 2020-04-08T05:32:14,730Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T05:32:14,773Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586323934344) {}
[INFO ] 2020-04-08T05:32:14,785Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T05:32:14,810Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586323934344) {}
[INFO ] 2020-04-08T05:32:14,811Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:32:14,813Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586323934344) {}
[INFO ] 2020-04-08T05:32:14,813Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-08T05:32:14,818Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T05:32:14,818Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-08T05:32:14,827Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T05:32:14,827Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:36:39,473Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-053636.198/custom-cordapp_1_5_53a9d17a-a034-4e18-b8f7-2a5e36bfbffd.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:36:39,883Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-053636.198/custom-cordapp_1_5_53a9d17a-a034-4e18-b8f7-2a5e36bfbffd.jar {}
[INFO ] 2020-04-08T05:36:50,088Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\workflows ... {}
[INFO ] 2020-04-08T05:36:50,700Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:36:55,247Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T05:36:59,015Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-08T05:36:59,074Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T05:36:59,076Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:37:00,386Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:37:00,428Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-08T05:37:01,423Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:37:01,461Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:37:01,461Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-08T05:37:01,939Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:37:01,980Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:37:03,200Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-08T05:37:04,195Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:37:04,215Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T05:37:04,258Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:37:04,259Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T05:37:04,259Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:37:05,956Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:37:05,956Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-08T05:37:06,250Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:37:06,251Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-08T05:37:06,336Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:37:06,338Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-08T05:37:06,469Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:37:06,470Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:37:06,776Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:06,858Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:37:06,982Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-08T05:37:07,393Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:37:07,393Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-08T05:37:07,428Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:37:07,499Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-08T05:37:07,499Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:37:07,580Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:07,581Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-08T05:37:07,617Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:07,617Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-08T05:37:07,617Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:07,617Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:07,694Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-08T05:37:07,806Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:07,806Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:37:07,852Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:07,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:37:07,852Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:07,853Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:37:07,853Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:07,866Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:37:07,867Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:08,053Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:08,054Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-08T05:37:08,152Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:08,182Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:37:08,244Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-08T05:37:08,384Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:37:08,384Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-08T05:37:08,394Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:37:08,427Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-08T05:37:08,427Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:37:08,438Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:08,439Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-08T05:37:08,459Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:08,459Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-08T05:37:08,459Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:08,460Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:08,461Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-08T05:37:08,613Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:08,613Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:37:08,634Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:08,635Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:37:08,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:08,635Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:37:08,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:08,635Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:37:08,635Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:37:08,635Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:08,646Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-08T05:37:08,686Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:37:08,696Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:37:08,698Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-08T05:37:08,698Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:37:08,709Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:37:08,776Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\.gradle {}
[INFO ] 2020-04-08T05:37:08,777Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:37:08,835Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-08T05:37:09,244Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-053645.596\nodes\0\cordapps] {}
[INFO ] 2020-04-08T05:37:09,248Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:37:09,285Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T05:37:09,424Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T05:37:11,049Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T05:37:11,205Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T05:37:11,205Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:37:11,206Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:37:11,206Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:37:12,214Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T05:36:45.577Z
      epoch=1
  } {}
[INFO ] 2020-04-08T05:37:21,208Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:21,230Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-053645.596\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:21,230Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:21,327Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:21,593Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:21,608Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:26,400Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:27,434Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:27,441Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:27,456Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:27,458Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:27,633Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:27,865Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T05:37:27,909Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T05:37:27,909Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T05:37:28,689Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T05:37:28,746Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T05:37:28,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324248746) {}
[INFO ] 2020-04-08T05:37:28,757Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T05:37:29,066Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324248746) {}
[INFO ] 2020-04-08T05:37:29,148Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T05:37:29,177Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324248746) {}
[INFO ] 2020-04-08T05:37:29,242Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:37:29,371Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=80C78049669E58FAB86AA6EE91A051D31890B3707233EEC9F4726A84F3BA511F uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T05:37:29,379Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-08T05:37:29,387Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-08T05:37:30,218Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324248746) {}
[INFO ] 2020-04-08T05:37:30,251Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324248746) {}
[INFO ] 2020-04-08T05:37:30,255Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:37:30,256Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324248746) {}
[INFO ] 2020-04-08T05:37:30,256Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:37:30,279Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-053645.596\nodes\1\cordapps] {}
[INFO ] 2020-04-08T05:37:30,282Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:37:30,282Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T05:37:30,327Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/1/cordapps/workflows-0.1.jar {}
[WARN ] 2020-04-08T05:37:30,343Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-04-08T05:37:30,346Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template Flows, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[INFO ] 2020-04-08T05:37:30,387Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T05:37:30,439Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T05:37:30,439Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:37:30,439Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:37:30,439Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:37:30,446Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T05:36:45.577Z
      epoch=1
  } {}
[INFO ] 2020-04-08T05:37:31,697Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:31,699Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-053645.596\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:31,699Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:31,748Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:31,776Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:31,776Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:32,119Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:32,182Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:32,189Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:32,193Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:32,193Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:32,413Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:32,431Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T05:37:32,437Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:37:32,437Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:37:32,711Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:37:32,714Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T05:37:32,758Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T05:37:32,758Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324252758) {}
[INFO ] 2020-04-08T05:37:32,762Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T05:37:32,779Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324252758) {}
[INFO ] 2020-04-08T05:37:32,809Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T05:37:32,820Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324252758) {}
[INFO ] 2020-04-08T05:37:32,838Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:37:32,951Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=80C78049669E58FAB86AA6EE91A051D31890B3707233EEC9F4726A84F3BA511F uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T05:37:32,973Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324252758) {}
[INFO ] 2020-04-08T05:37:32,980Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324248746) {}
[INFO ] 2020-04-08T05:37:32,985Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T05:37:33,011Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324252758) {}
[INFO ] 2020-04-08T05:37:33,015Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T05:37:33,035Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324252758) {}
[INFO ] 2020-04-08T05:37:33,035Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:37:33,036Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324252758) {}
[INFO ] 2020-04-08T05:37:33,036Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:37:33,056Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-053645.596\nodes\2\cordapps] {}
[INFO ] 2020-04-08T05:37:33,058Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:37:33,058Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T05:37:33,091Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053645.596/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T05:37:33,168Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T05:37:33,239Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T05:37:33,239Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:37:33,240Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:37:33,244Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:37:33,254Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T05:36:45.577Z
      epoch=1
  } {}
[INFO ] 2020-04-08T05:37:34,708Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:34,720Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-053645.596\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:34,720Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:34,760Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:34,766Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:34,766Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:34,977Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:34,998Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:35,001Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:35,008Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:35,009Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:35,140Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:37:35,184Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T05:37:35,189Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:37:35,189Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:37:36,466Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:37:36,470Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T05:37:36,514Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T05:37:36,514Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324256514) {}
[INFO ] 2020-04-08T05:37:36,519Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T05:37:36,540Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324256514) {}
[INFO ] 2020-04-08T05:37:36,558Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T05:37:36,567Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324256514) {}
[INFO ] 2020-04-08T05:37:36,582Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:37:36,694Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=80C78049669E58FAB86AA6EE91A051D31890B3707233EEC9F4726A84F3BA511F uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T05:37:36,719Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324256514) {}
[INFO ] 2020-04-08T05:37:36,726Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324248746) {}
[INFO ] 2020-04-08T05:37:36,727Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T05:37:36,748Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324256514) {}
[INFO ] 2020-04-08T05:37:36,752Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T05:37:36,777Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324252758) {}
[INFO ] 2020-04-08T05:37:36,779Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T05:37:36,800Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324256514) {}
[INFO ] 2020-04-08T05:37:36,802Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T05:37:36,821Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324256514) {}
[INFO ] 2020-04-08T05:37:36,821Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:37:36,821Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324256514) {}
[INFO ] 2020-04-08T05:37:36,822Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-08T05:37:36,825Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T05:37:36,825Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-08T05:37:36,836Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T05:37:36,836Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:39:48,263Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-053944.730/custom-cordapp_1_5_826baf4f-00ee-4b22-be2b-6367f57d3e64.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:39:48,645Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-053944.730/custom-cordapp_1_5_826baf4f-00ee-4b22-be2b-6367f57d3e64.jar {}
[INFO ] 2020-04-08T05:40:06,704Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\workflows ... {}
[INFO ] 2020-04-08T05:40:07,263Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:40:10,796Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T05:40:13,765Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-08T05:40:13,794Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T05:40:13,796Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:40:15,365Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:40:15,416Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-08T05:40:16,466Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:40:16,488Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:40:16,488Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-08T05:40:16,878Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:40:16,908Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:40:18,183Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-08T05:40:19,175Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:40:19,185Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T05:40:19,247Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:40:19,247Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T05:40:19,248Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T05:40:20,864Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:40:20,864Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-08T05:40:21,083Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:40:21,083Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-08T05:40:21,193Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:40:21,193Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-08T05:40:21,304Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T05:40:21,304Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:40:21,574Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:21,634Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:40:21,744Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-08T05:40:22,096Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:40:22,097Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-08T05:40:22,137Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:40:22,179Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-08T05:40:22,179Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T05:40:22,247Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,248Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-08T05:40:22,272Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,273Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-08T05:40:22,273Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,273Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,329Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-08T05:40:22,386Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,386Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:40:22,406Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,432Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:40:22,432Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,433Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:40:22,434Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,435Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T05:40:22,465Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,505Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,505Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-08T05:40:22,548Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,548Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:40:22,580Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-08T05:40:22,632Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:40:22,632Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-08T05:40:22,633Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:40:22,633Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-08T05:40:22,633Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T05:40:22,654Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,654Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-08T05:40:22,654Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,655Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-08T05:40:22,655Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,656Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,667Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-08T05:40:22,767Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,768Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:40:22,798Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,799Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:40:22,799Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,801Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:40:22,801Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,802Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T05:40:22,803Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T05:40:22,803Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,816Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-08T05:40:22,889Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T05:40:22,889Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:40:22,889Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-08T05:40:22,899Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T05:40:22,902Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:40:22,930Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\.gradle {}
[INFO ] 2020-04-08T05:40:22,930Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T05:40:22,973Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-08T05:40:23,254Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-053958.068\nodes\0\cordapps] {}
[INFO ] 2020-04-08T05:40:23,261Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:40:23,269Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T05:40:23,348Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T05:40:24,645Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T05:40:24,801Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T05:40:24,802Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:40:24,804Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:40:24,812Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:40:25,998Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T05:39:58.019Z
      epoch=1
  } {}
[INFO ] 2020-04-08T05:40:33,341Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:33,372Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-053958.068\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:33,372Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:33,470Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:33,619Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:33,631Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:36,836Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:37,898Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:37,901Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:37,912Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:37,914Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:38,080Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:38,197Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T05:40:38,230Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T05:40:38,230Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T05:40:38,651Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T05:40:38,666Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T05:40:38,667Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324438666) {}
[INFO ] 2020-04-08T05:40:38,675Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T05:40:38,971Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324438666) {}
[INFO ] 2020-04-08T05:40:39,148Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T05:40:39,202Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324438666) {}
[INFO ] 2020-04-08T05:40:39,297Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:40:39,472Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=31343E9FC140E20016122FE65B3A0A292E38CF6482B683E76753C5838A10E6A9 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T05:40:39,481Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-08T05:40:39,489Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-08T05:40:40,332Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324438666) {}
[INFO ] 2020-04-08T05:40:40,377Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324438666) {}
[INFO ] 2020-04-08T05:40:40,380Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:40:40,396Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324438666) {}
[INFO ] 2020-04-08T05:40:40,398Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:40:40,444Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-053958.068\nodes\1\cordapps] {}
[INFO ] 2020-04-08T05:40:40,451Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:40:40,453Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T05:40:40,494Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/1/cordapps/workflows-0.1.jar {}
[WARN ] 2020-04-08T05:40:40,516Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-04-08T05:40:40,518Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template Flows, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[INFO ] 2020-04-08T05:40:40,572Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T05:40:40,634Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T05:40:40,635Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:40:40,635Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:40:40,637Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:40:40,646Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T05:39:58.019Z
      epoch=1
  } {}
[INFO ] 2020-04-08T05:40:41,816Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:41,819Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-053958.068\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:41,819Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:41,864Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:41,868Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:41,868Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:42,172Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:42,223Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:42,224Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:42,229Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:42,229Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:42,408Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:42,418Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T05:40:42,422Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:40:42,422Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:40:42,660Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:40:42,661Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T05:40:42,708Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T05:40:42,708Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324442708) {}
[INFO ] 2020-04-08T05:40:42,713Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T05:40:42,728Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324442708) {}
[INFO ] 2020-04-08T05:40:42,749Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T05:40:42,766Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324442708) {}
[INFO ] 2020-04-08T05:40:42,775Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:40:42,871Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=31343E9FC140E20016122FE65B3A0A292E38CF6482B683E76753C5838A10E6A9 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T05:40:42,891Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324442708) {}
[INFO ] 2020-04-08T05:40:42,895Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324438666) {}
[INFO ] 2020-04-08T05:40:42,901Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T05:40:42,921Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324442708) {}
[INFO ] 2020-04-08T05:40:42,926Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T05:40:42,946Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324442708) {}
[INFO ] 2020-04-08T05:40:42,946Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:40:42,946Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324442708) {}
[INFO ] 2020-04-08T05:40:42,947Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:40:42,971Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-053958.068\nodes\2\cordapps] {}
[INFO ] 2020-04-08T05:40:42,974Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T05:40:42,976Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T05:40:42,999Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-053958.068/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T05:40:43,071Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T05:40:43,153Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T05:40:43,153Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:40:43,153Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T05:40:43,154Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T05:40:43,169Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T05:39:58.019Z
      epoch=1
  } {}
[INFO ] 2020-04-08T05:40:44,420Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,423Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-053958.068\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,423Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,448Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,453Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,453Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,716Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,734Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,737Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,753Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:44,753Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:45,411Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T05:40:45,427Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T05:40:45,431Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:40:45,431Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:40:45,671Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T05:40:45,674Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T05:40:45,733Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T05:40:45,733Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324445733) {}
[INFO ] 2020-04-08T05:40:45,738Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T05:40:45,761Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324445733) {}
[INFO ] 2020-04-08T05:40:45,789Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T05:40:45,828Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324445733) {}
[INFO ] 2020-04-08T05:40:45,848Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:40:45,944Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=31343E9FC140E20016122FE65B3A0A292E38CF6482B683E76753C5838A10E6A9 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T05:40:45,986Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324445733) {}
[INFO ] 2020-04-08T05:40:45,997Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586324438666) {}
[INFO ] 2020-04-08T05:40:45,999Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T05:40:46,041Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324445733) {}
[INFO ] 2020-04-08T05:40:46,043Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T05:40:46,067Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586324442708) {}
[INFO ] 2020-04-08T05:40:46,069Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T05:40:46,087Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324445733) {}
[INFO ] 2020-04-08T05:40:46,090Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T05:40:46,110Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324445733) {}
[INFO ] 2020-04-08T05:40:46,110Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T05:40:46,111Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586324445733) {}
[INFO ] 2020-04-08T05:40:46,111Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-08T05:40:46,114Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T05:40:46,114Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-08T05:40:46,123Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T05:40:46,123Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T10:58:21,038Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-105817.611/custom-cordapp_1_5_f9d1d03b-283a-442b-946a-dd7a57cbca25.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T10:58:21,393Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-105817.611/custom-cordapp_1_5_f9d1d03b-283a-442b-946a-dd7a57cbca25.jar {}
[INFO ] 2020-04-08T10:58:31,604Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\workflows ... {}
[INFO ] 2020-04-08T10:58:32,209Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T10:58:36,350Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T10:58:39,102Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-08T10:58:39,173Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T10:58:39,176Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T10:58:40,593Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T10:58:40,627Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-08T10:58:41,494Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T10:58:41,516Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T10:58:41,516Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-08T10:58:41,843Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T10:58:41,864Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T10:58:42,947Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-08T10:58:44,700Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T10:58:44,720Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T10:58:44,885Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T10:58:44,896Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T10:58:44,896Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T10:58:46,801Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T10:58:46,801Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-08T10:58:47,131Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T10:58:47,131Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-08T10:58:48,139Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T10:58:48,139Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-08T10:58:48,489Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T10:58:48,489Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T10:58:48,737Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:48,798Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T10:58:48,961Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-08T10:58:49,534Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T10:58:49,534Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-08T10:58:49,606Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T10:58:49,681Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-08T10:58:49,681Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T10:58:49,910Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:49,934Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-08T10:58:49,947Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:49,948Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-08T10:58:49,948Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:49,948Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,024Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-08T10:58:50,111Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,111Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T10:58:50,131Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,159Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T10:58:50,197Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,197Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T10:58:50,198Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,199Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T10:58:50,199Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,270Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:50,271Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-08T10:58:50,313Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:50,313Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T10:58:50,349Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-08T10:58:50,413Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T10:58:50,414Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-08T10:58:50,414Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T10:58:50,425Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-08T10:58:50,425Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T10:58:50,504Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:50,504Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-08T10:58:50,521Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:50,521Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-08T10:58:50,521Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:50,522Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,522Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-08T10:58:50,611Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,611Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T10:58:50,673Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,674Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T10:58:50,690Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,691Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T10:58:50,692Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,692Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T10:58:50,694Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T10:58:50,694Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:50,694Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-08T10:58:54,403Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T10:58:54,413Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T10:58:54,633Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-08T10:58:54,633Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T10:58:54,661Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T10:58:54,692Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\.gradle {}
[INFO ] 2020-04-08T10:58:54,692Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T10:58:54,749Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-08T10:58:57,142Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-105826.481\nodes\0\cordapps] {}
[INFO ] 2020-04-08T10:58:57,147Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T10:58:57,157Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T10:58:57,284Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T10:59:00,404Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T10:59:00,747Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T10:59:00,749Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T10:59:00,750Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T10:59:00,750Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T10:59:01,619Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T10:58:26.443Z
      epoch=1
  } {}
[INFO ] 2020-04-08T10:59:15,329Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:15,335Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-105826.481\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:15,335Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:15,409Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:15,594Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:15,605Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:19,507Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:20,457Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:20,466Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:20,476Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:20,476Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:20,626Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:20,746Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T10:59:20,785Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T10:59:20,785Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T10:59:21,269Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T10:59:21,287Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T10:59:21,287Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343561287) {}
[INFO ] 2020-04-08T10:59:21,295Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T10:59:21,627Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343561287) {}
[INFO ] 2020-04-08T10:59:21,714Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T10:59:21,801Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343561287) {}
[INFO ] 2020-04-08T10:59:21,854Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T10:59:21,976Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8095233DF9E0D1FC100771CD4CE21EF629282C3C0AA428532E6A29A1F80AAAEB uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T10:59:21,985Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-08T10:59:21,992Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-08T10:59:22,780Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343561287) {}
[INFO ] 2020-04-08T10:59:22,818Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343561287) {}
[INFO ] 2020-04-08T10:59:22,821Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T10:59:22,822Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343561287) {}
[INFO ] 2020-04-08T10:59:22,822Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T10:59:22,853Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-105826.481\nodes\1\cordapps] {}
[INFO ] 2020-04-08T10:59:22,854Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T10:59:22,854Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T10:59:22,883Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/1/cordapps/workflows-0.1.jar {}
[WARN ] 2020-04-08T10:59:22,893Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-04-08T10:59:22,895Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template Flows, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[INFO ] 2020-04-08T10:59:22,936Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T10:59:22,991Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T10:59:22,992Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T10:59:22,992Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T10:59:22,994Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T10:59:23,000Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T10:58:26.443Z
      epoch=1
  } {}
[INFO ] 2020-04-08T10:59:24,175Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,178Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-105826.481\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,178Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,248Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,255Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,255Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,550Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,569Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,571Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,574Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,574Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,669Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:24,682Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T10:59:24,686Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T10:59:24,686Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T10:59:24,992Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T10:59:24,996Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T10:59:25,038Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T10:59:25,039Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343565039) {}
[INFO ] 2020-04-08T10:59:25,043Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T10:59:25,059Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343565039) {}
[INFO ] 2020-04-08T10:59:25,076Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T10:59:25,084Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343565039) {}
[INFO ] 2020-04-08T10:59:25,092Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T10:59:25,204Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8095233DF9E0D1FC100771CD4CE21EF629282C3C0AA428532E6A29A1F80AAAEB uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T10:59:25,223Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343565039) {}
[INFO ] 2020-04-08T10:59:25,233Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343561287) {}
[INFO ] 2020-04-08T10:59:25,238Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T10:59:25,292Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343565039) {}
[INFO ] 2020-04-08T10:59:25,295Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T10:59:25,327Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343565039) {}
[INFO ] 2020-04-08T10:59:25,327Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T10:59:25,328Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343565039) {}
[INFO ] 2020-04-08T10:59:25,328Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T10:59:25,458Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-105826.481\nodes\2\cordapps] {}
[INFO ] 2020-04-08T10:59:25,463Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T10:59:25,463Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T10:59:25,497Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-105826.481/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T10:59:25,625Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T10:59:25,721Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T10:59:25,722Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T10:59:25,722Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T10:59:25,722Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T10:59:25,728Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T10:58:26.443Z
      epoch=1
  } {}
[INFO ] 2020-04-08T10:59:27,148Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,151Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-105826.481\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,151Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,210Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,216Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,216Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,451Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,469Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,471Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,480Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,480Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:27,578Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T10:59:28,182Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T10:59:28,184Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T10:59:28,184Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T10:59:28,500Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T10:59:28,502Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T10:59:28,546Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T10:59:28,546Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343568546) {}
[INFO ] 2020-04-08T10:59:28,551Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T10:59:28,566Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343568546) {}
[INFO ] 2020-04-08T10:59:28,607Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T10:59:28,656Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343568546) {}
[INFO ] 2020-04-08T10:59:28,675Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T10:59:28,743Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8095233DF9E0D1FC100771CD4CE21EF629282C3C0AA428532E6A29A1F80AAAEB uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T10:59:28,762Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343568546) {}
[INFO ] 2020-04-08T10:59:28,768Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343561287) {}
[INFO ] 2020-04-08T10:59:28,770Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T10:59:28,788Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343568546) {}
[INFO ] 2020-04-08T10:59:28,790Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T10:59:28,807Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343565039) {}
[INFO ] 2020-04-08T10:59:28,810Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T10:59:28,828Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343568546) {}
[INFO ] 2020-04-08T10:59:28,830Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T10:59:28,847Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343568546) {}
[INFO ] 2020-04-08T10:59:28,847Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T10:59:28,848Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343568546) {}
[INFO ] 2020-04-08T10:59:28,848Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-08T10:59:28,851Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T10:59:28,851Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-08T10:59:28,859Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T10:59:28,859Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:01:59,279Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-110156.634/custom-cordapp_1_5_fa104e36-393e-4efc-8087-a0c869c49a29.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:01:59,511Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-110156.634/custom-cordapp_1_5_fa104e36-393e-4efc-8087-a0c869c49a29.jar {}
[INFO ] 2020-04-08T11:02:09,134Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\workflows ... {}
[INFO ] 2020-04-08T11:02:09,548Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:02:13,756Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T11:02:16,585Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-08T11:02:16,634Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T11:02:16,636Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:02:18,438Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:02:18,482Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-08T11:02:19,302Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:02:19,329Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:02:19,329Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-08T11:02:19,777Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:02:19,819Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:02:20,812Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-08T11:02:21,931Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:02:21,951Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T11:02:21,998Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:02:21,999Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T11:02:21,999Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:02:23,402Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:02:23,403Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-08T11:02:23,591Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:02:23,591Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-08T11:02:23,669Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:02:23,669Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-08T11:02:24,079Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:02:24,080Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:02:24,367Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:24,427Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:02:24,528Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-08T11:02:24,904Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:02:24,904Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-08T11:02:24,924Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:02:25,017Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-08T11:02:25,017Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:02:25,075Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,085Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-08T11:02:25,085Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,085Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-08T11:02:25,085Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,086Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,115Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-08T11:02:25,170Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,171Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:02:25,183Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,204Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:02:25,204Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,204Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:02:25,205Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,205Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:02:25,205Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,236Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,237Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-08T11:02:25,268Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,269Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:02:25,305Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-08T11:02:25,522Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:02:25,522Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-08T11:02:25,532Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:02:25,532Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-08T11:02:25,533Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:02:25,556Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,556Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-08T11:02:25,567Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,568Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-08T11:02:25,568Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,568Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,580Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-08T11:02:25,630Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,630Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:02:25,651Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,652Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:02:25,652Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,652Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:02:25,652Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,653Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:02:25,653Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:02:25,653Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,654Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-08T11:02:25,724Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:02:25,725Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:02:25,726Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-08T11:02:25,726Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:02:25,734Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:02:25,791Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\.gradle {}
[INFO ] 2020-04-08T11:02:25,791Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:02:25,856Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-08T11:02:26,142Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-110204.252\nodes\0\cordapps] {}
[INFO ] 2020-04-08T11:02:26,147Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:02:26,154Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T11:02:26,231Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T11:02:27,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T11:02:27,714Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T11:02:27,716Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:02:27,721Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:02:27,722Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:02:28,786Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T11:02:04.237Z
      epoch=1
  } {}
[INFO ] 2020-04-08T11:02:39,357Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:39,369Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-110204.252\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:39,369Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:39,511Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:39,678Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:39,687Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:43,610Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:45,005Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:45,023Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:45,037Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:45,037Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:45,473Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:45,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T11:02:45,640Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T11:02:45,642Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T11:02:46,398Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T11:02:46,422Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T11:02:46,424Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343766423) {}
[INFO ] 2020-04-08T11:02:46,432Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T11:02:46,865Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343766423) {}
[INFO ] 2020-04-08T11:02:47,098Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T11:02:47,159Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343766423) {}
[INFO ] 2020-04-08T11:02:47,263Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:02:47,439Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=0F7DF4D57180BB9935B396312BBCF6347F6BD588ABE3E111418083DD64903FE8 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T11:02:47,452Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-08T11:02:47,459Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-08T11:02:48,483Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343766423) {}
[INFO ] 2020-04-08T11:02:48,537Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343766423) {}
[INFO ] 2020-04-08T11:02:48,541Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:02:48,542Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343766423) {}
[INFO ] 2020-04-08T11:02:48,543Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:02:48,559Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-110204.252\nodes\1\cordapps] {}
[INFO ] 2020-04-08T11:02:48,561Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:02:48,561Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T11:02:48,597Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/1/cordapps/workflows-0.1.jar {}
[WARN ] 2020-04-08T11:02:48,641Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-04-08T11:02:48,645Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template Flows, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[INFO ] 2020-04-08T11:02:48,703Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T11:02:48,793Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T11:02:48,795Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:02:48,796Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:02:48,800Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:02:48,805Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T11:02:04.237Z
      epoch=1
  } {}
[INFO ] 2020-04-08T11:02:50,221Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,225Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-110204.252\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,225Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,276Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,291Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,291Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,593Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,644Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,646Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,656Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,657Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,786Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:50,797Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T11:02:50,802Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:02:50,802Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:02:51,291Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:02:51,294Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T11:02:51,352Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T11:02:51,352Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343771352) {}
[INFO ] 2020-04-08T11:02:51,356Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T11:02:51,371Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343771352) {}
[INFO ] 2020-04-08T11:02:51,405Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T11:02:51,417Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343771352) {}
[INFO ] 2020-04-08T11:02:51,426Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:02:51,576Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=0F7DF4D57180BB9935B396312BBCF6347F6BD588ABE3E111418083DD64903FE8 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T11:02:51,600Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343771352) {}
[INFO ] 2020-04-08T11:02:51,608Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343766423) {}
[INFO ] 2020-04-08T11:02:51,613Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T11:02:51,642Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343771352) {}
[INFO ] 2020-04-08T11:02:51,645Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T11:02:51,673Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343771352) {}
[INFO ] 2020-04-08T11:02:51,673Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:02:51,674Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343771352) {}
[INFO ] 2020-04-08T11:02:51,674Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:02:51,705Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-110204.252\nodes\2\cordapps] {}
[INFO ] 2020-04-08T11:02:51,709Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:02:51,712Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T11:02:51,747Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-110204.252/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T11:02:51,812Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T11:02:51,910Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T11:02:51,912Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:02:51,913Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:02:51,913Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:02:51,926Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T11:02:04.237Z
      epoch=1
  } {}
[INFO ] 2020-04-08T11:02:53,351Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:53,354Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-110204.252\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:53,354Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:53,384Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:53,388Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:53,388Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:54,270Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:54,295Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:54,299Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:54,307Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:54,307Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:54,561Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:02:54,579Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T11:02:54,581Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:02:54,582Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:02:54,844Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:02:54,846Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T11:02:54,903Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T11:02:54,903Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343774903) {}
[INFO ] 2020-04-08T11:02:54,908Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T11:02:54,922Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343774903) {}
[INFO ] 2020-04-08T11:02:54,945Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T11:02:54,979Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343774903) {}
[INFO ] 2020-04-08T11:02:55,003Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:02:55,090Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=0F7DF4D57180BB9935B396312BBCF6347F6BD588ABE3E111418083DD64903FE8 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T11:02:55,110Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343774903) {}
[INFO ] 2020-04-08T11:02:55,116Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586343766423) {}
[INFO ] 2020-04-08T11:02:55,118Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T11:02:55,139Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343774903) {}
[INFO ] 2020-04-08T11:02:55,141Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T11:02:55,189Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586343771352) {}
[INFO ] 2020-04-08T11:02:55,191Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T11:02:55,206Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343774903) {}
[INFO ] 2020-04-08T11:02:55,208Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T11:02:55,224Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343774903) {}
[INFO ] 2020-04-08T11:02:55,224Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:02:55,225Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586343774903) {}
[INFO ] 2020-04-08T11:02:55,225Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-08T11:02:55,229Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T11:02:55,229Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-08T11:02:55,236Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T11:02:55,236Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:10:16,968Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-111014.250/custom-cordapp_1_5_9e71b788-9c69-48e2-946d-b096a84b118e.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:10:17,245Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-111014.250/custom-cordapp_1_5_9e71b788-9c69-48e2-946d-b096a84b118e.jar {}
[INFO ] 2020-04-08T11:10:25,816Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\workflows ... {}
[INFO ] 2020-04-08T11:10:26,207Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:10:28,856Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T11:10:31,680Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-08T11:10:31,727Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T11:10:31,729Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:10:33,098Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:10:33,274Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-08T11:10:33,987Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:10:33,987Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:10:33,997Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-08T11:10:34,316Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:10:34,337Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:10:35,152Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-08T11:10:36,028Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:10:36,028Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T11:10:36,082Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:10:36,083Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T11:10:36,083Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:10:37,320Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:10:37,320Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-08T11:10:37,516Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:10:37,516Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-08T11:10:37,566Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:10:37,566Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-08T11:10:37,646Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:10:37,646Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:10:37,859Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:37,922Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:10:38,005Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-08T11:10:38,445Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:10:38,445Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-08T11:10:38,488Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:10:38,555Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-08T11:10:38,556Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:10:38,641Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:38,641Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-08T11:10:38,655Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:38,656Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-08T11:10:38,656Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:38,656Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:38,698Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-08T11:10:38,738Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:38,738Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:10:38,771Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:38,772Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:10:38,772Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:38,772Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:10:38,772Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:38,773Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:10:38,795Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:38,805Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:38,806Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-08T11:10:38,841Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:38,855Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:10:38,899Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-08T11:10:38,961Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:10:38,961Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-08T11:10:38,962Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:10:38,962Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-08T11:10:38,963Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:10:38,984Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:38,984Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-08T11:10:39,005Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:39,005Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-08T11:10:39,005Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:39,005Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:39,006Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-08T11:10:39,088Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:39,098Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:10:39,143Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:39,144Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:10:39,170Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:39,170Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:10:39,171Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:39,171Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:10:39,171Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:10:39,172Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:39,172Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-08T11:10:41,678Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:10:41,707Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:10:41,707Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-08T11:10:41,708Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:10:41,719Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:10:41,749Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\.gradle {}
[INFO ] 2020-04-08T11:10:41,749Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:10:41,781Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-08T11:10:42,001Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-111021.872\nodes\0\cordapps] {}
[INFO ] 2020-04-08T11:10:42,009Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:10:42,019Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T11:10:42,131Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T11:10:43,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T11:10:43,455Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T11:10:43,456Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:10:43,457Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:10:43,462Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:10:43,726Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T11:10:21.858Z
      epoch=1
  } {}
[INFO ] 2020-04-08T11:10:51,453Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:51,460Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-111021.872\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:51,460Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:51,560Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:51,764Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:51,774Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:54,790Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:55,752Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:55,758Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:55,766Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:55,766Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:55,924Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:56,006Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T11:10:56,063Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T11:10:56,063Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T11:10:56,499Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T11:10:56,521Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T11:10:56,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586344256521) {}
[INFO ] 2020-04-08T11:10:56,531Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T11:10:56,806Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586344256521) {}
[INFO ] 2020-04-08T11:10:56,915Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T11:10:56,978Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586344256521) {}
[INFO ] 2020-04-08T11:10:57,059Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:10:57,160Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=60E303330B0C72680FBA463E7A91A7FECD334AE2C0D457CAE5CA091E1C66F24A uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T11:10:57,169Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-08T11:10:57,176Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-08T11:10:58,136Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586344256521) {}
[INFO ] 2020-04-08T11:10:58,169Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586344256521) {}
[INFO ] 2020-04-08T11:10:58,173Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:10:58,174Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586344256521) {}
[INFO ] 2020-04-08T11:10:58,175Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:10:58,201Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-111021.872\nodes\1\cordapps] {}
[INFO ] 2020-04-08T11:10:58,203Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:10:58,204Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T11:10:58,229Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/1/cordapps/workflows-0.1.jar {}
[WARN ] 2020-04-08T11:10:58,243Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-04-08T11:10:58,246Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template Flows, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[INFO ] 2020-04-08T11:10:58,292Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T11:10:58,352Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T11:10:58,352Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:10:58,353Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:10:58,353Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:10:58,365Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T11:10:21.858Z
      epoch=1
  } {}
[INFO ] 2020-04-08T11:10:59,729Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:59,732Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-111021.872\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:59,732Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:59,781Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:59,787Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:10:59,787Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:00,079Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:00,101Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:00,103Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:00,108Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:00,108Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:00,196Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:00,213Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T11:11:00,216Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:11:00,216Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:11:00,439Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:11:00,442Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T11:11:00,479Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T11:11:00,479Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586344260479) {}
[INFO ] 2020-04-08T11:11:00,482Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T11:11:00,497Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586344260479) {}
[INFO ] 2020-04-08T11:11:00,517Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T11:11:00,530Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586344260479) {}
[INFO ] 2020-04-08T11:11:00,542Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:11:00,635Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=60E303330B0C72680FBA463E7A91A7FECD334AE2C0D457CAE5CA091E1C66F24A uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T11:11:00,657Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586344260479) {}
[INFO ] 2020-04-08T11:11:00,664Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586344256521) {}
[INFO ] 2020-04-08T11:11:00,666Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T11:11:00,689Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586344260479) {}
[INFO ] 2020-04-08T11:11:00,693Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T11:11:00,711Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586344260479) {}
[INFO ] 2020-04-08T11:11:00,711Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:11:00,712Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586344260479) {}
[INFO ] 2020-04-08T11:11:00,712Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:11:00,726Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-111021.872\nodes\2\cordapps] {}
[INFO ] 2020-04-08T11:11:00,729Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:11:00,729Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T11:11:00,757Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-111021.872/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T11:11:00,805Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T11:11:00,857Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T11:11:00,859Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:11:00,861Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:11:00,861Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:11:00,869Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T11:10:21.858Z
      epoch=1
  } {}
[INFO ] 2020-04-08T11:11:01,901Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:01,906Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-111021.872\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:01,906Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:01,934Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:01,937Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:01,939Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:02,220Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:02,242Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:02,244Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:02,253Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:02,253Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:02,404Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:11:02,417Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T11:11:02,419Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:11:02,419Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:11:02,647Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:11:02,651Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T11:11:02,699Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T11:11:02,699Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586344262699) {}
[INFO ] 2020-04-08T11:11:02,702Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T11:11:02,715Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586344262699) {}
[INFO ] 2020-04-08T11:11:03,366Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T11:11:03,377Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586344262699) {}
[INFO ] 2020-04-08T11:11:03,390Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:11:03,503Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=60E303330B0C72680FBA463E7A91A7FECD334AE2C0D457CAE5CA091E1C66F24A uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T11:11:03,523Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586344262699) {}
[INFO ] 2020-04-08T11:11:03,528Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586344256521) {}
[INFO ] 2020-04-08T11:11:03,536Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T11:11:03,557Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586344262699) {}
[INFO ] 2020-04-08T11:11:03,562Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T11:11:03,583Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586344260479) {}
[INFO ] 2020-04-08T11:11:03,585Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T11:11:03,599Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586344262699) {}
[INFO ] 2020-04-08T11:11:03,604Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T11:11:03,618Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586344262699) {}
[INFO ] 2020-04-08T11:11:03,618Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:11:03,619Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586344262699) {}
[INFO ] 2020-04-08T11:11:03,619Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-08T11:11:03,622Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T11:11:03,622Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-08T11:11:03,628Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T11:11:03,628Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:28:54,180Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-112850.760/custom-cordapp_1_5_c9ccad81-bf95-4836-b767-d138008eada8.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:28:54,464Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-112850.760/custom-cordapp_1_5_c9ccad81-bf95-4836-b767-d138008eada8.jar {}
[INFO ] 2020-04-08T11:29:03,912Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\workflows ... {}
[INFO ] 2020-04-08T11:29:04,459Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:29:08,248Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T11:29:11,277Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-08T11:29:11,349Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-08T11:29:11,354Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:29:12,388Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:29:12,427Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-08T11:29:13,231Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:29:13,252Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:29:13,253Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-08T11:29:13,634Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:29:13,654Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:29:14,572Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-08T11:29:15,541Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:29:15,578Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T11:29:15,611Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:29:15,612Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T11:29:15,613Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T11:29:17,361Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:29:17,361Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-08T11:29:17,709Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:29:17,709Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-08T11:29:17,756Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:29:17,757Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-08T11:29:17,916Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T11:29:17,916Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:29:18,169Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:18,236Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:29:18,336Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-08T11:29:18,696Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:29:18,696Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-08T11:29:18,740Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:29:18,795Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-08T11:29:18,795Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T11:29:18,858Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:18,858Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-08T11:29:18,899Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:18,900Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-08T11:29:18,900Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:18,900Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:18,940Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-08T11:29:19,027Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,027Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:29:19,059Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,059Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:29:19,060Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,060Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:29:19,060Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,061Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T11:29:19,077Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,088Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:19,088Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-08T11:29:19,143Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:19,153Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:29:19,183Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-08T11:29:19,241Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:29:19,241Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-08T11:29:19,241Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:29:19,251Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-08T11:29:19,252Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-08T11:29:19,262Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:19,262Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-08T11:29:19,273Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:19,274Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-08T11:29:19,274Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:19,274Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,284Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-08T11:29:19,375Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,375Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:29:19,396Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,396Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:29:19,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,397Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:29:19,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,398Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-08T11:29:19,398Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-08T11:29:19,399Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:19,399Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-08T11:29:21,841Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T11:29:21,841Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:29:21,842Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-08T11:29:21,842Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T11:29:21,852Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:29:21,872Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\.gradle {}
[INFO ] 2020-04-08T11:29:21,882Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T11:29:21,919Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-08T11:29:22,251Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-112859.403\nodes\0\cordapps] {}
[INFO ] 2020-04-08T11:29:22,256Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:29:22,280Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T11:29:22,364Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T11:29:23,706Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T11:29:24,002Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T11:29:24,016Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:29:24,024Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:29:24,026Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:29:25,075Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T11:28:59.381Z
      epoch=1
  } {}
[INFO ] 2020-04-08T11:29:34,739Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:34,777Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-112859.403\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:34,777Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:34,881Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:35,062Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:35,074Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:38,756Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:39,877Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:39,891Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:39,896Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:39,896Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:40,076Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:40,197Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T11:29:40,265Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T11:29:40,265Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T11:29:40,714Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-08T11:29:40,729Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T11:29:40,729Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586345380729) {}
[INFO ] 2020-04-08T11:29:40,738Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T11:29:41,078Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586345380729) {}
[INFO ] 2020-04-08T11:29:41,222Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T11:29:41,261Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586345380729) {}
[INFO ] 2020-04-08T11:29:41,347Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:29:41,447Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=85ED7B2B35C97D0BA7FDB766352972CBBCF380276B687ECD68BECFB40F29ACE5 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T11:29:41,455Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-08T11:29:41,461Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-08T11:29:42,212Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586345380729) {}
[INFO ] 2020-04-08T11:29:42,245Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586345380729) {}
[INFO ] 2020-04-08T11:29:42,248Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:29:42,249Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586345380729) {}
[INFO ] 2020-04-08T11:29:42,249Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:29:42,267Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-112859.403\nodes\1\cordapps] {}
[INFO ] 2020-04-08T11:29:42,268Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:29:42,268Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T11:29:42,314Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/1/cordapps/workflows-0.1.jar {}
[WARN ] 2020-04-08T11:29:42,324Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-04-08T11:29:42,326Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Template Flows, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[INFO ] 2020-04-08T11:29:42,373Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T11:29:42,435Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T11:29:42,435Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:29:42,435Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:29:42,435Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:29:42,443Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T11:28:59.381Z
      epoch=1
  } {}
[INFO ] 2020-04-08T11:29:43,831Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:43,834Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-112859.403\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:43,834Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:43,882Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:43,887Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:43,887Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:44,214Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:44,269Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:44,271Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:44,275Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:44,275Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:44,546Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:44,599Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T11:29:44,603Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:29:44,605Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:29:44,962Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:29:44,966Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T11:29:45,038Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T11:29:45,038Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586345385038) {}
[INFO ] 2020-04-08T11:29:45,043Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T11:29:45,058Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586345385038) {}
[INFO ] 2020-04-08T11:29:45,107Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T11:29:45,115Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586345385038) {}
[INFO ] 2020-04-08T11:29:45,125Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:29:45,215Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=85ED7B2B35C97D0BA7FDB766352972CBBCF380276B687ECD68BECFB40F29ACE5 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T11:29:45,233Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586345385038) {}
[INFO ] 2020-04-08T11:29:45,239Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586345380729) {}
[INFO ] 2020-04-08T11:29:45,242Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T11:29:45,263Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586345385038) {}
[INFO ] 2020-04-08T11:29:45,265Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T11:29:45,280Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586345385038) {}
[INFO ] 2020-04-08T11:29:45,280Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:29:45,281Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586345385038) {}
[INFO ] 2020-04-08T11:29:45,281Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:29:45,305Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200408-112859.403\nodes\2\cordapps] {}
[INFO ] 2020-04-08T11:29:45,307Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T11:29:45,307Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-08T11:29:45,338Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/mock-network/20200408-112859.403/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-08T11:29:45,387Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-08T11:29:45,450Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Initiator to initiate com.assessment.flow.TradeFlow$Acceptor (version 1) {}
[INFO ] 2020-04-08T11:29:45,450Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Close to initiate com.assessment.flow.TradeFlow$CloseFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:29:45,450Z [Test worker] internal.NodeFlowManager. - Registered com.assessment.flow.TradeFlow$Settle to initiate com.assessment.flow.TradeFlow$SettleFlowResponder (version 1) {}
[INFO ] 2020-04-08T11:29:45,450Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T11:29:45,461Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-08T11:28:59.381Z
      epoch=1
  } {}
[INFO ] 2020-04-08T11:29:46,586Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:46,589Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200408-112859.403\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:46,589Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:46,695Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:46,699Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:46,699Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:47,085Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:47,099Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:47,101Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:47,110Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:47,112Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:47,229Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-08T11:29:47,251Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-08T11:29:47,254Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:29:47,254Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:29:47,577Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), TradeSchema(name=com.assessment.schemas.TradeSchema, version=1)] {}
[INFO ] 2020-04-08T11:29:47,581Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-08T11:29:47,638Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-08T11:29:47,639Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586345387638) {}
[INFO ] 2020-04-08T11:29:47,665Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T11:29:47,677Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586345387638) {}
[INFO ] 2020-04-08T11:29:48,261Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-08T11:29:48,266Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586345387638) {}
[INFO ] 2020-04-08T11:29:48,276Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:29:48,359Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=85ED7B2B35C97D0BA7FDB766352972CBBCF380276B687ECD68BECFB40F29ACE5 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-08T11:29:48,387Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586345387638) {}
[INFO ] 2020-04-08T11:29:48,392Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1586345380729) {}
[INFO ] 2020-04-08T11:29:48,396Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-08T11:29:48,413Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586345387638) {}
[INFO ] 2020-04-08T11:29:48,415Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T11:29:48,431Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1586345385038) {}
[INFO ] 2020-04-08T11:29:48,433Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-08T11:29:48,449Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586345387638) {}
[INFO ] 2020-04-08T11:29:48,451Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-08T11:29:48,463Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586345387638) {}
[INFO ] 2020-04-08T11:29:48,463Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-08T11:29:48,464Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1586345387638) {}
[INFO ] 2020-04-08T11:29:48,464Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-08T11:29:48,467Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T11:29:48,467Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-08T11:29:48,474Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-08T11:29:48,474Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-08T12:00:52,195Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-120049.494/custom-cordapp_1_5_431e5bb5-b14b-4805-a118-c7f1bc8907e7.jar, rootPackageName=null) {}
[INFO ] 2020-04-08T12:00:52,471Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/D:/cordapp-template-java-release-V4/cordapp-template-java-release-V4/workflows/build/generated-custom-cordapps/20200408-120049.494/custom-cordapp_1_5_431e5bb5-b14b-4805-a118-c7f1bc8907e7.jar {}
[INFO ] 2020-04-08T12:01:00,852Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\workflows ... {}
[INFO ] 2020-04-08T12:01:01,356Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T12:01:05,053Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-08T12:01:05,109Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T12:01:05,225Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T12:01:05,229Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-08T12:01:05,281Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T12:01:05,281Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T12:01:05,281Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-08T12:01:05,293Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T12:01:05,293Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T12:01:05,425Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-08T12:01:06,421Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T12:01:06,421Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T12:01:06,517Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T12:01:06,517Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-08T12:01:06,517Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-08T12:01:06,681Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T12:01:06,681Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-08T12:01:06,693Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T12:01:06,697Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-08T12:01:06,729Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T12:01:06,729Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-08T12:01:06,753Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-08T12:01:06,753Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T12:01:06,813Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T12:01:06,837Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T12:01:06,921Z [Connection worker] internal.TestCordappImpl. - Clean stale outputs {}
[INFO ] 2020-04-08T12:01:06,957Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T12:01:06,969Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-08T12:01:07,413Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T12:01:07,413Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-08T12:01:07,437Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T12:01:07,473Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-08T12:01:07,473Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T12:01:07,497Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-08T12:01:07,497Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-08T12:01:09,309Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T12:01:09,309Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-08T12:01:09,321Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T12:01:09,321Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-08T12:01:09,321Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T12:01:09,321Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T12:01:09,333Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-08T12:01:09,421Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T12:01:09,421Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T12:01:09,421Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T12:01:09,421Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T12:01:09,421Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T12:01:09,421Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T12:01:09,421Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T12:01:09,425Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-08T12:01:09,469Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-08T12:01:09,469Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T12:01:09,473Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-08T12:01:09,509Z [Connection worker] internal.TestCordappImpl. - Clean stale outputs {}
[INFO ] 2020-04-08T12:01:09,509Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-08T12:01:09,509Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-08T12:01:09,509Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-08T12:01:09,641Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T12:01:09,713Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in D:\cordapp-template-java-release-V4\cordapp-template-java-release-V4\.gradle {}
[INFO ] 2020-04-08T12:01:09,713Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-08T12:01:10,013Z [Connection worker] internal.TestCordappImpl. -  {}
